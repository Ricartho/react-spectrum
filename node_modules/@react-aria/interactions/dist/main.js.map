{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/interactions/src/utils.ts","./packages/@react-aria/interactions/src/context.ts","./packages/@react-aria/interactions/src/usePress.ts","./packages/@react-aria/interactions/src/useInteractOutside.ts","./packages/@react-aria/interactions/src/Pressable.tsx","./packages/@react-aria/interactions/src/PressResponder.tsx","./packages/@react-aria/interactions/src/createEventHandler.ts","./packages/@react-aria/interactions/src/useKeyboard.ts","./packages/@react-aria/interactions/src/useFocus.ts","./packages/@react-aria/interactions/src/useFocusWithin.ts","./packages/@react-aria/interactions/src/useFocusVisible.ts","./packages/@react-aria/interactions/src/useHover.ts"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/blob/3c713d513195a53788b3f8bb4b70279d68b15bcc/packages/react-interactions/events/src/dom/shared/index.js#L74-L87\n\n// Keyboards, Assistive Technologies, and element.click() all produce a \"virtual\"\n// click event. This is a method of inferring such clicks. Every browser except\n// IE 11 only sets a zero value of \"detail\" for click events that are \"virtual\".\n// However, IE 11 uses a zero value for all click events. For IE 11 we rely on\n// the quirk that it produces click events that are of type PointerEvent, and\n// where only the \"virtual\" click lacks a pointerType field.\n\nexport function isVirtualClick(event: MouseEvent | PointerEvent): boolean {\n  // JAWS/NVDA with Firefox.\n  if ((event as any).mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n\n  return event.detail === 0 && !(event as PointerEvent).pointerType;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PressProps} from './usePress';\nimport React, {MutableRefObject} from 'react';\n\ninterface PressResponderContext extends PressProps {\n  register(): void,\n  ref?: MutableRefObject<HTMLElement>\n}\n\nexport const PressResponderContext = React.createContext<PressResponderContext>(null);\nPressResponderContext.displayName = 'PressResponderContext';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {focusWithoutScrolling, mergeProps, runAfterTransition} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject, useCallback, useContext, useEffect, useMemo, useRef, useState} from 'react';\nimport {isVirtualClick} from './utils';\nimport {PointerType, PressEvents} from '@react-types/shared';\nimport {PressResponderContext} from './context';\n\nexport interface PressProps extends PressEvents {\n  /** Whether the target is in a controlled press state (e.g. an overlay it triggers is open). */\n  isPressed?: boolean,\n  /** Whether the press events should be disabled. */\n  isDisabled?: boolean\n}\n\nexport interface PressHookProps extends PressProps {\n  /** A ref to the target element. */\n  ref?: RefObject<HTMLElement>\n}\n\ninterface PressState {\n  isPressed: boolean,\n  ignoreEmulatedMouseEvents: boolean,\n  ignoreClickAfterPress: boolean,\n  activePointerId: any,\n  target: HTMLElement | null,\n  isOverTarget: boolean,\n  userSelect?: string\n}\n\ninterface EventBase {\n  currentTarget: EventTarget,\n  shiftKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean\n}\n\nexport interface PressResult {\n  /** Whether the target is currently pressed. */\n  isPressed: boolean,\n  /** Props to spread on the target element. */\n  pressProps: HTMLAttributes<HTMLElement>\n}\n\nfunction usePressResponderContext(props: PressHookProps): PressHookProps {\n  // Consume context from <PressResponder> and merge with props.\n  let context = useContext(PressResponderContext);\n  if (context) {\n    let {register, ...contextProps} = context;\n    props = mergeProps(contextProps, props) as PressHookProps;\n    register();\n  }\n\n  // Sync ref from <PressResponder> with ref passed to usePress.\n  useEffect(() => {\n    if (context && context.ref) {\n      context.ref.current = props.ref.current;\n      return () => {\n        context.ref.current = null;\n      };\n    }\n  }, [context, props.ref]);\n\n  return props;\n}\n\n/**\n * Handles press interactions across mouse, touch, keyboard, and screen readers.\n * It normalizes behavior across browsers and platforms, and handles many nuances\n * of dealing with pointer and keyboard events.\n */\nexport function usePress(props: PressHookProps): PressResult {\n  let {\n    onPress,\n    onPressChange,\n    onPressStart,\n    onPressEnd,\n    onPressUp,\n    isDisabled,\n    isPressed: isPressedProp,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref: _, // Removing `ref` from `domProps` because TypeScript is dumb\n    ...domProps\n  } = usePressResponderContext(props);\n\n  let [isPressed, setPressed] = useState(false);\n  let ref = useRef<PressState>({\n    isPressed: false,\n    ignoreEmulatedMouseEvents: false,\n    ignoreClickAfterPress: false,\n    activePointerId: null,\n    target: null,\n    isOverTarget: false\n  });\n\n  let globalListeners = useRef(new Map());\n  let addGlobalListener = useCallback((eventTarget, type, listener, options) => {\n    globalListeners.current.set(listener, {type, eventTarget, options});\n    eventTarget.addEventListener(type, listener, options);\n  }, [globalListeners.current]);\n  let removeGlobalListener = useCallback((eventTarget, type, listener, options) => {\n    eventTarget.removeEventListener(type, listener, options);\n    globalListeners.current.delete(listener);\n  }, [globalListeners.current]);\n\n  let pressProps = useMemo(() => {\n    let state = ref.current;\n    let triggerPressStart = (originalEvent: EventBase, pointerType: PointerType) => {\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressStart) {\n        onPressStart({\n          type: 'pressstart',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(true);\n      }\n\n      setPressed(true);\n    };\n\n    let triggerPressEnd = (originalEvent: EventBase, pointerType: PointerType, wasPressed = true) => {\n      if (isDisabled) {\n        return;\n      }\n\n      state.ignoreClickAfterPress = true;\n\n      if (onPressEnd) {\n        onPressEnd({\n          type: 'pressend',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n\n      if (onPressChange) {\n        onPressChange(false);\n      }\n\n      setPressed(false);\n\n      if (onPress && wasPressed) {\n        onPress({\n          type: 'press',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n    };\n\n    let triggerPressUp = (originalEvent: EventBase, pointerType: PointerType) => {\n      if (isDisabled) {\n        return;\n      }\n\n      if (onPressUp) {\n        onPressUp({\n          type: 'pressup',\n          pointerType,\n          target: originalEvent.currentTarget as HTMLElement,\n          shiftKey: originalEvent.shiftKey,\n          metaKey: originalEvent.metaKey,\n          ctrlKey: originalEvent.ctrlKey\n        });\n      }\n    };\n\n    let pressProps: HTMLAttributes<HTMLElement> = {\n      onKeyDown(e) {\n        if (isValidKeyboardEvent(e.nativeEvent)) {\n          e.preventDefault();\n          e.stopPropagation();\n\n\n          // If the event is repeating, it may have started on a different element\n          // after which focus moved to the current element. Ignore these events and\n          // only handle the first key down event.\n          if (!state.isPressed && !e.repeat) {\n            state.target = e.currentTarget as HTMLElement;\n            state.isPressed = true;\n            triggerPressStart(e, 'keyboard');\n\n            // Focus may move before the key up event, so register the event on the document\n            // instead of the same element where the key down event occurred.\n            addGlobalListener(document, 'keyup', onKeyUp, false);\n          }\n        }\n      },\n      onKeyUp(e) {\n        if (isValidKeyboardEvent(e.nativeEvent) && !e.repeat) {\n          triggerPressUp(createEvent(state.target, e), 'keyboard');\n        }\n      },\n      onClick(e) {\n        if (e && e.button === 0) {\n          e.stopPropagation();\n          if (isDisabled) {\n            e.preventDefault();\n          }\n\n          // If triggered from a screen reader or by using element.click(),\n          // trigger as if it were a keyboard click.\n          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && isVirtualClick(e.nativeEvent)) {\n            // Ensure the element receives focus (VoiceOver on iOS does not do this)\n            if (!isDisabled) {\n              focusWithoutScrolling(e.currentTarget);\n            }\n\n            triggerPressStart(e, 'virtual');\n            triggerPressUp(e, 'virtual');\n            triggerPressEnd(e, 'virtual');\n          }\n\n          state.ignoreEmulatedMouseEvents = false;\n          state.ignoreClickAfterPress = false;\n        }\n      }\n    };\n\n    let onKeyUp = (e: KeyboardEvent) => {\n      if (state.isPressed && isValidKeyboardEvent(e)) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        state.isPressed = false;\n        triggerPressEnd(createEvent(state.target, e), 'keyboard', e.target === state.target);\n        removeGlobalListener(document, 'keyup', onKeyUp, false);\n\n        // If the target is a link, trigger the click method to open the URL,\n        // but defer triggering pressEnd until onClick event handler.\n        if (e.target === state.target && isHTMLAnchorLink(state.target) || state.target.getAttribute('role') === 'link') {\n          state.target.click();\n        }\n      }\n    };\n\n    // Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n    // is to add user-select: none to the entire page. Adding it to the pressable element prevents\n    // that element from being selected, but nearby elements may still receive selection. We add\n    // user-select: none on touch start, and remove it again on touch end to prevent this.\n    let disableTextSelection = () => {\n      state.userSelect = document.documentElement.style.webkitUserSelect;\n      document.documentElement.style.webkitUserSelect = 'none';\n    };\n\n    let restoreTextSelection = () => {\n      // There appears to be a delay on iOS where selection still might occur\n      // after pointer up, so wait a bit before removing user-select.\n      setTimeout(() => {\n        // Wait for any CSS transitions to complete so we don't recompute style\n        // for the whole page in the middle of the animation and cause jank.\n        runAfterTransition(() => {\n          // Avoid race conditions\n          if (!state.isPressed && document.documentElement.style.webkitUserSelect === 'none') {\n            document.documentElement.style.webkitUserSelect = state.userSelect || '';\n            state.userSelect = null;\n          }\n        });\n      }, 300);\n    };\n\n    if (typeof PointerEvent !== 'undefined') {\n      pressProps.onPointerDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on pointer down and handle focusing the pressable element ourselves.\n        e.preventDefault();\n        e.stopPropagation();\n        if (!state.isPressed) {\n          state.isPressed = true;\n          state.isOverTarget = true;\n          state.activePointerId = e.pointerId;\n          state.target = e.currentTarget;\n\n          if (!isDisabled) {\n            focusWithoutScrolling(e.currentTarget);\n          }\n\n          disableTextSelection();\n          triggerPressStart(e, e.pointerType);\n\n          addGlobalListener(document, 'pointermove', onPointerMove, false);\n          addGlobalListener(document, 'pointerup', onPointerUp, false);\n          addGlobalListener(document, 'pointercancel', onPointerCancel, false);\n        }\n      };\n\n      pressProps.onMouseDown = (e) => {\n        if (e.button === 0) {\n          // Chrome and Firefox on touch Windows devices require mouse down events\n          // to be canceled in addition to pointer events, or an extra asynchronous\n          // focus event will be fired.\n          e.preventDefault();\n        }\n      };\n\n      let unbindEvents = () => {\n        removeGlobalListener(document, 'pointermove', onPointerMove, false);\n        removeGlobalListener(document, 'pointerup', onPointerUp, false);\n        removeGlobalListener(document, 'pointercancel', onPointerCancel, false);\n      };\n\n      pressProps.onPointerUp = (e) => {\n        // Only handle left clicks\n        // Safari on iOS sometimes fires pointerup events, even\n        // when the touch isn't over the target, so double check.\n        if (e.button === 0 && isOverTarget(e, e.currentTarget)) {\n          triggerPressUp(e, e.pointerType as PointerType);\n        }\n      };\n\n      // Safari on iOS < 13.2 does not implement pointerenter/pointerleave events correctly.\n      // Use pointer move events instead to implement our own hit testing.\n      // See https://bugs.webkit.org/show_bug.cgi?id=199803\n      let onPointerMove = (e: PointerEvent) => {\n        if (e.pointerId !== state.activePointerId) {\n          return;\n        }\n\n        if (isOverTarget(e, state.target)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(createEvent(state.target, e), e.pointerType as PointerType);\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(createEvent(state.target, e), e.pointerType as PointerType, false);\n        }\n      };\n\n      let onPointerUp = (e: PointerEvent) => {\n        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {\n          if (isOverTarget(e, state.target)) {\n            triggerPressEnd(createEvent(state.target, e), e.pointerType as PointerType);\n          } else if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), e.pointerType as PointerType, false);\n          }\n\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          unbindEvents();\n          restoreTextSelection();\n        }\n      };\n\n      let onPointerCancel = (e: PointerEvent) => {\n        if (state.isPressed) {\n          if (state.isOverTarget) {\n            triggerPressEnd(createEvent(state.target, e), e.pointerType as PointerType, false);\n          }\n          state.isPressed = false;\n          state.isOverTarget = false;\n          state.activePointerId = null;\n          unbindEvents();\n          restoreTextSelection();\n        }\n      };\n    } else {\n      pressProps.onMouseDown = (e) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent\n        // default on mouse down and handle focusing the pressable element ourselves.\n        e.preventDefault();\n        e.stopPropagation();\n        if (state.ignoreEmulatedMouseEvents) {\n          return;\n        }\n\n        state.isPressed = true;\n        state.isOverTarget = true;\n        state.target = e.currentTarget;\n\n        if (!isDisabled) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        triggerPressStart(e, isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse');\n\n        addGlobalListener(document, 'mouseup', onMouseUp, false);\n      };\n\n      pressProps.onMouseEnter = (e) => {\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = true;\n          triggerPressStart(e, 'mouse');\n        }\n      };\n\n      pressProps.onMouseLeave = (e) => {\n        e.stopPropagation();\n        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, 'mouse', false);\n        }\n      };\n\n      pressProps.onMouseUp = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && e.button === 0) {\n          triggerPressUp(e, isVirtualClick(e.nativeEvent) ? 'virtual' : 'mouse');\n        }\n      };\n\n      let onMouseUp = (e: MouseEvent) => {\n        // Only handle left clicks\n        if (e.button !== 0) {\n          return;\n        }\n\n        state.isPressed = false;\n        removeGlobalListener(document, 'mouseup', onMouseUp, false);\n\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n          return;\n        }\n\n        let pointerType: PointerType = isVirtualClick(e) ? 'virtual' : 'mouse';\n        if (isOverTarget(e, state.target)) {\n          triggerPressEnd(createEvent(state.target, e), pointerType);\n        } else if (state.isOverTarget) {\n          triggerPressEnd(createEvent(state.target, e), pointerType, false);\n        }\n\n        state.isOverTarget = false;\n      };\n\n      pressProps.onTouchStart = (e) => {\n        e.stopPropagation();\n        let touch = getTouchFromEvent(e.nativeEvent);\n        if (!touch) {\n          return;\n        }\n        state.activePointerId = touch.identifier;\n        state.ignoreEmulatedMouseEvents = true;\n        state.isOverTarget = true;\n        state.isPressed = true;\n        state.target = e.currentTarget;\n\n        // Due to browser inconsistencies, especially on mobile browsers, we prevent default\n        // on the emulated mouse event and handle focusing the pressable element ourselves.\n        if (!isDisabled) {\n          focusWithoutScrolling(e.currentTarget);\n        }\n\n        disableTextSelection();\n        triggerPressStart(e, 'touch');\n\n        addGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchMove = (e) => {\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          if (!state.isOverTarget) {\n            state.isOverTarget = true;\n            triggerPressStart(e, 'touch');\n          }\n        } else if (state.isOverTarget) {\n          state.isOverTarget = false;\n          triggerPressEnd(e, 'touch', false);\n        }\n      };\n\n      pressProps.onTouchEnd = (e) => {\n        e.stopPropagation();\n        if (!state.isPressed) {\n          return;\n        }\n\n        let touch = getTouchById(e.nativeEvent, state.activePointerId);\n        if (touch && isOverTarget(touch, e.currentTarget)) {\n          triggerPressUp(e, 'touch');\n          triggerPressEnd(e, 'touch');\n        } else if (state.isOverTarget) {\n          triggerPressEnd(e, 'touch', false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        state.ignoreEmulatedMouseEvents = true;\n        restoreTextSelection();\n        removeGlobalListener(window, 'scroll', onScroll, true);\n      };\n\n      pressProps.onTouchCancel = (e) => {\n        e.stopPropagation();\n        if (state.isPressed) {\n          cancelTouchEvent(e, 'touch');\n        }\n      };\n\n      let onScroll = (e: Event) => {\n        if (state.isPressed && (e.target as HTMLElement).contains(state.target)) {\n          cancelTouchEvent({\n            currentTarget: state.target,\n            shiftKey: false,\n            ctrlKey: false,\n            metaKey: false\n          }, 'touch');\n        }\n      };\n\n      let cancelTouchEvent = (e: EventBase, pointerType: PointerType) => {\n        if (state.isOverTarget) {\n          triggerPressEnd(e, pointerType, false);\n        }\n\n        state.isPressed = false;\n        state.activePointerId = null;\n        state.isOverTarget = false;\n        restoreTextSelection();\n        window.removeEventListener('scroll', onScroll, true);\n      };\n    }\n\n    return pressProps;\n  }, [onPress, onPressStart, onPressEnd, onPressChange, onPressUp, isDisabled]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      globalListeners.current.forEach((value, key) => {\n        removeGlobalListener(value.eventTarget, value.type, key, value.options);\n      });\n    };\n  }, [globalListeners.current]);\n\n  return {\n    isPressed: isPressedProp || isPressed,\n    pressProps: mergeProps(domProps, pressProps)\n  };\n}\n\nfunction isHTMLAnchorLink(target: HTMLElement): boolean {\n  return target.tagName === 'A' && target.hasAttribute('href');\n}\n\nfunction isValidKeyboardEvent(event: KeyboardEvent): boolean {\n  const {key, target} = event;\n  const element = target as HTMLElement;\n  const {tagName, isContentEditable} = element;\n  const role = element.getAttribute('role');\n  // Accessibility for keyboards. Space and Enter only.\n  // \"Spacebar\" is for IE 11\n  return (\n    (key === 'Enter' || key === ' ' || key === 'Spacebar') &&\n    (tagName !== 'INPUT' &&\n      tagName !== 'TEXTAREA' &&\n      isContentEditable !== true) &&\n    // A link with a valid href should be handled natively,\n    // unless it also has role='button' and was triggered using Space.\n    (!isHTMLAnchorLink(element) || (role === 'button' && key !== 'Enter')) &&\n    // An element with role='link' should only trigger with Enter key\n    !(role === 'link' && key !== 'Enter')\n  );\n}\n\nfunction getTouchFromEvent(event: TouchEvent): Touch | null {\n  const {targetTouches} = event;\n  if (targetTouches.length > 0) {\n    return targetTouches[0];\n  }\n  return null;\n}\n\nfunction getTouchById(\n  event: TouchEvent,\n  pointerId: null | number\n): null | Touch {\n  const changedTouches = event.changedTouches;\n  for (let i = 0; i < changedTouches.length; i++) {\n    const touch = changedTouches[i];\n    if (touch.identifier === pointerId) {\n      return touch;\n    }\n  }\n  return null;\n}\n\nfunction createEvent(target: HTMLElement, e: EventBase): EventBase {\n  return {\n    currentTarget: target,\n    shiftKey: e.shiftKey,\n    ctrlKey: e.ctrlKey,\n    metaKey: e.metaKey\n  };\n}\n\ninterface EventPoint {\n  clientX: number,\n  clientY: number\n}\n\nfunction isOverTarget(point: EventPoint, target: HTMLElement) {\n  let rect = target.getBoundingClientRect();\n  return (point.clientX || 0) >= (rect.left || 0) &&\n    (point.clientX || 0) <= (rect.right || 0) &&\n    (point.clientY || 0) >= (rect.top || 0) &&\n    (point.clientY || 0) <= (rect.bottom || 0);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {RefObject, SyntheticEvent, useEffect, useRef} from 'react';\n\ninterface InteractOutsideProps {\n  ref: RefObject<Element>,\n  onInteractOutside?: (e: SyntheticEvent) => void\n}\n\n/**\n * Example, used in components like Dialogs and Popovers so they can close\n * when a user clicks outside them.\n */\nexport function useInteractOutside(props: InteractOutsideProps) {\n  let {ref, onInteractOutside} = props;\n  let stateRef = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false\n  });\n  let state = stateRef.current;\n\n  useEffect(() => {\n    let onPointerDown = (e) => {\n      if (isValidEvent(e, ref)) {\n        state.isPointerDown = true;\n      }\n    };\n\n    // Use pointer events if available. Otherwise, fall back to mouse and touch events.\n    if (typeof PointerEvent !== 'undefined') {\n      let onPointerUp = (e) => {\n        if (state.isPointerDown && onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          onInteractOutside(e);\n        }\n      };\n\n      document.addEventListener('pointerdown', onPointerDown, false);\n      document.addEventListener('pointerup', onPointerUp, false);\n\n      return () => {\n        document.removeEventListener('pointerdown', onPointerDown, false);\n        document.removeEventListener('pointerup', onPointerUp, false);\n      };\n    } else {\n      let onMouseUp = (e) => {\n        if (state.ignoreEmulatedMouseEvents) {\n          state.ignoreEmulatedMouseEvents = false;\n        } else if (state.isPointerDown && onInteractOutside && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          onInteractOutside(e);\n        }\n      };\n\n      let onTouchEnd = (e) => {\n        state.ignoreEmulatedMouseEvents = true;\n        if (onInteractOutside && state.isPointerDown && isValidEvent(e, ref)) {\n          state.isPointerDown = false;\n          onInteractOutside(e);\n        }\n      };\n\n      document.addEventListener('mousedown', onPointerDown, false);\n      document.addEventListener('mouseup', onMouseUp, false);\n      document.addEventListener('touchstart', onPointerDown, false);\n      document.addEventListener('touchend', onTouchEnd, false);\n\n      return () => {\n        document.removeEventListener('mousedown', onPointerDown, false);\n        document.removeEventListener('mouseup', onMouseUp, false);\n        document.removeEventListener('touchstart', onPointerDown, false);\n        document.removeEventListener('touchend', onTouchEnd, false);\n      };\n    }\n  }, [onInteractOutside, ref, state.ignoreEmulatedMouseEvents, state.isPointerDown]);\n}\n\nfunction isValidEvent(event, ref) {\n  if (event.button > 0) {\n    return false;\n  }\n\n  // if the event target is no longer in the document\n  if (event.target) {\n    const ownerDocument = event.target.ownerDocument;\n    if (!ownerDocument || !ownerDocument.body.contains(event.target)) {\n      return false;\n    }\n  }\n\n  return ref.current && !ref.current.contains(event.target);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps, usePress} from './usePress';\nimport React, {HTMLAttributes, ReactElement, RefObject, useRef} from 'react';\n\ninterface PressableProps extends PressProps {\n  children: ReactElement<HTMLAttributes<HTMLElement>, string>\n}\n\nexport const Pressable = React.forwardRef(({children, ...props}: PressableProps, ref: RefObject<HTMLElement>) => {\n  ref = ref || useRef();\n  let {pressProps} = usePress({...props, ref});\n  let child = React.Children.only(children);\n  return React.cloneElement(\n    child,\n    // @ts-ignore\n    {ref, ...mergeProps(child.props, pressProps)}\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps} from '@react-aria/utils';\nimport {PressProps} from './usePress';\nimport {PressResponderContext} from './context';\nimport React, {ReactNode, RefObject, useContext, useEffect, useRef} from 'react';\n\ninterface PressResponderProps extends PressProps {\n  children: ReactNode\n}\n\nexport const PressResponder = React.forwardRef(({children, ...props}: PressResponderProps, ref: RefObject<HTMLElement>) => {\n  let isRegistered = useRef(false);\n  let prevContext = useContext(PressResponderContext);\n  let context = mergeProps(prevContext || {}, {\n    ...props,\n    ref,\n    register() {\n      isRegistered.current = true;\n      if (prevContext) {\n        prevContext.register();\n      }\n    }\n  });\n\n  useEffect(() => {\n    if (!isRegistered.current) {\n      console.warn(\n        'A PressResponder was rendered without a pressable child. ' +\n        'Either call the usePress hook, or wrap your DOM node with <Pressable> component.'\n      );\n    }\n  }, []);\n\n  return (\n    <PressResponderContext.Provider value={context}>\n      {children}\n    </PressResponderContext.Provider>\n  );\n});\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {BaseEvent} from '@react-types/shared';\nimport {SyntheticEvent} from 'react';\n\n/**\n * This function wraps a React event handler to make stopPropagation the default, and support continuePropagation instead.\n */\nexport function createEventHandler<T extends SyntheticEvent>(handler: (e: BaseEvent<T>) => void): (e: T) => void {\n  if (!handler) {\n    return;\n  }\n\n  let shouldStopPropagation = true;\n  return (e: T) => {\n    let event: BaseEvent<T> = {\n      ...e,\n      preventDefault() {\n        e.preventDefault();\n      },\n      isDefaultPrevented() {\n        return e.isDefaultPrevented();\n      },\n      stopPropagation() {\n        console.error('stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.');\n      },\n      continuePropagation() {\n        shouldStopPropagation = false;\n      }\n    };\n\n    handler(event);\n\n    if (shouldStopPropagation) {\n      e.stopPropagation();\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {createEventHandler} from './createEventHandler';\nimport {HTMLAttributes} from 'react';\nimport {KeyboardEvents} from '@react-types/shared';\n\nexport interface KeyboardProps extends KeyboardEvents {\n  /** Whether the keyboard events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface KeyboardResult {\n  /** Props to spread onto the target element. */\n  keyboardProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles keyboard interactions for a focusable element.\n */\nexport function useKeyboard(props: KeyboardProps): KeyboardResult {\n  return {\n    keyboardProps: props.isDisabled ? {} : {\n      onKeyDown: createEventHandler(props.onKeyDown),\n      onKeyUp: createEventHandler(props.onKeyUp)\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {FocusEvent, HTMLAttributes} from 'react';\nimport {FocusEvents} from '@react-types/shared';\n\ninterface FocusProps extends FocusEvents {\n  /** Whether the focus events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface FocusResult {\n  /** Props to spread onto the target element. */\n  focusProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles focus events for the immediate target.\n * Focus events on child elements will be ignored.\n */\nexport function useFocus(props: FocusProps): FocusResult {\n  if (props.isDisabled) {\n    return {focusProps: {}};\n  }\n\n  let onFocus, onBlur;\n  if (props.onFocus || props.onFocusChange) {\n    onFocus = (e: FocusEvent) => {\n      if (e.target === e.currentTarget) {\n        if (props.onFocus) {\n          props.onFocus(e);\n        }\n\n        if (props.onFocusChange) {\n          props.onFocusChange(true);\n        }\n      }\n    };\n  }\n\n  if (props.onBlur || props.onFocusChange) {\n    onBlur = (e: FocusEvent) => {\n      if (e.target === e.currentTarget) {\n        if (props.onBlur) {\n          props.onBlur(e);\n        }\n\n        if (props.onFocusChange) {\n          props.onFocusChange(false);\n        }\n      }\n    };\n  }\n\n  return {\n    focusProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {FocusEvent, HTMLAttributes, useRef} from 'react';\n\ninterface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\ninterface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let state = useRef({\n    isFocusWithin: false\n  }).current;\n\n  if (props.isDisabled) {\n    return {focusWithinProps: {}};\n  }\n\n  let onFocus = (e: FocusEvent) => {\n    if (!state.isFocusWithin) {\n      if (props.onFocusWithin) {\n        props.onFocusWithin(e);\n      }\n\n      if (props.onFocusWithinChange) {\n        props.onFocusWithinChange(true);\n      }\n\n      state.isFocusWithin = true;\n    }\n  };\n\n  let onBlur = (e: FocusEvent) => {\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.isFocusWithin && !e.currentTarget.contains(e.relatedTarget as HTMLElement)) {\n      if (props.onBlurWithin) {\n        props.onBlurWithin(e);\n      }\n\n      if (props.onFocusWithinChange) {\n        props.onFocusWithinChange(false);\n      }\n\n      state.isFocusWithin = false;\n    }\n  };\n\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {isVirtualClick} from './utils';\nimport {useEffect, useState} from 'react';\n\ntype Modality = 'keyboard' | 'pointer' | 'virtual';\ntype HandlerEvent = PointerEvent | MouseEvent | KeyboardEvent | FocusEvent;\ntype Handler = (modality: Modality, e: HandlerEvent) => void;\ninterface FocusVisibleProps {\n  /** Whether the element is a text input. */\n  isTextInput?: boolean,\n  /** Whether the element will be auto focused. */\n  autoFocus?: boolean\n}\n\ninterface FocusVisibleResult {\n  /** Whether keyboard focus is visible globally. */\n  isFocusVisible: boolean\n}\n\nlet currentModality = null;\nlet changeHandlers = new Set<Handler>();\nlet hasSetupGlobalListeners = false;\nlet hasEventBeforeFocus = false;\n\nconst isMac =\n  typeof window !== 'undefined' && window.navigator != null\n    ? /^Mac/.test(window.navigator.platform)\n    : false;\n\n// Only Tab or Esc keys will make focus visible on text input elements\nconst FOCUS_VISIBLE_INPUT_KEYS = {\n  Tab: true,\n  Escape: true\n};\n\nfunction triggerChangeHandlers(modality: Modality, e: HandlerEvent) {\n  for (let handler of changeHandlers) {\n    handler(modality, e);\n  }\n}\n\n/**\n * Helper function to determine if a KeyboardEvent is unmodified and could make keyboard focus styles visible.\n */\nfunction isValidKey(e: KeyboardEvent) {\n  return !(e.metaKey || (!isMac && e.altKey) || e.ctrlKey);\n}\n\nfunction handleKeyboardEvent(e: KeyboardEvent) {\n  hasEventBeforeFocus = true;\n  if (isValidKey(e)) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n}\n\nfunction handlePointerEvent(e: PointerEvent | MouseEvent) {\n  currentModality = 'pointer';\n  if (e.type === 'mousedown' || e.type === 'pointerdown') {\n    hasEventBeforeFocus = true;\n    triggerChangeHandlers('pointer', e);\n  }\n}\n\nfunction handleClickEvent(e: MouseEvent) {\n  if (isVirtualClick(e)) {\n    hasEventBeforeFocus = true;\n    currentModality = 'virtual';\n  }\n}\n\nfunction handleFocusEvent(e: FocusEvent) {\n  // Firefox fires two extra focus events when the user first clicks into an iframe:\n  // first on the window, then on the document. We ignore these events so they don't\n  // cause keyboard focus rings to appear.\n  if (e.target === window || e.target === document) {\n    return;\n  }\n\n  // If a focus event occurs without a preceding keyboard or pointer event, switch to keyboard modality.\n  // This occurs, for example, when navigating a form with the next/previous buttons on iOS.\n  if (!hasEventBeforeFocus) {\n    currentModality = 'keyboard';\n    triggerChangeHandlers('keyboard', e);\n  }\n\n  hasEventBeforeFocus = false;\n}\n\nfunction handleWindowBlur() {\n  // When the window is blurred, reset state. This is necessary when tabbing out of the window,\n  // for example, since a subsequent focus event won't be fired.\n  hasEventBeforeFocus = false;\n}\n\n/**\n * Setup global event listeners to control when keyboard focus style should be visible.\n */\nfunction setupGlobalFocusEvents() {\n  if (typeof window === 'undefined' || hasSetupGlobalListeners) {\n    return;\n  }\n\n  // Programmatic focus() calls shouldn't affect the current input modality.\n  // However, we need to detect other cases when a focus event occurs without\n  // a preceding user event (e.g. screen reader focus). Overriding the focus\n  // method on HTMLElement.prototype is a bit hacky, but works.\n  let focus = HTMLElement.prototype.focus;\n  HTMLElement.prototype.focus = function () {\n    hasEventBeforeFocus = true;\n    focus.apply(this, arguments);\n  };\n\n  document.addEventListener('keydown', handleKeyboardEvent, true);\n  document.addEventListener('keyup', handleKeyboardEvent, true);\n  document.addEventListener('click', handleClickEvent, true);\n\n  // Register focus events on the window so they are sure to happen\n  // before React's event listeners (registered on the document).\n  window.addEventListener('focus', handleFocusEvent, true);\n  window.addEventListener('blur', handleWindowBlur, false);\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerdown', handlePointerEvent, true);\n    document.addEventListener('pointermove', handlePointerEvent, true);\n    document.addEventListener('pointerup', handlePointerEvent, true);\n  } else {\n    document.addEventListener('mousedown', handlePointerEvent, true);\n    document.addEventListener('mousemove', handlePointerEvent, true);\n    document.addEventListener('mouseup', handlePointerEvent, true);\n  }\n\n  hasSetupGlobalListeners = true;\n}\n\n/**\n * If true, keyboard focus is visible.\n */\nexport function isFocusVisible(): boolean {\n  return currentModality !== 'pointer';\n}\n\nexport function getInteractionModality(): Modality {\n  return currentModality;\n}\n\nexport function setInteractionModality(modality: Modality) {\n  currentModality = modality;\n  triggerChangeHandlers(modality, null);\n}\n\n/**\n * Keeps state of the current modality.\n */\nexport function useInteractionModality(): Modality {\n  setupGlobalFocusEvents();\n\n  let [modality, setModality] = useState(currentModality);\n  useEffect(() => {\n    let handler = () => {\n      setModality(currentModality);\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, []);\n\n  return modality;\n}\n\n/**\n * Manages focus visible state for the page, and subscribes individual components for updates.\n */\nexport function useFocusVisible(props: FocusVisibleProps = {}): FocusVisibleResult {\n  setupGlobalFocusEvents();\n\n  let {isTextInput, autoFocus} = props;\n  let [isFocusVisibleState, setFocusVisible] = useState(autoFocus || isFocusVisible());\n  useEffect(() => {\n    let handler = (modality: Modality, e: HandlerEvent) => {\n      // If this is a text input component, don't update the focus visible style when\n      // typing except for when the Tab and Escape keys are pressed.\n      if (isTextInput && modality === 'keyboard' && e instanceof KeyboardEvent && !FOCUS_VISIBLE_INPUT_KEYS[e.key]) {\n        return;\n      }\n\n      setFocusVisible(isFocusVisible());\n    };\n\n    changeHandlers.add(handler);\n    return () => {\n      changeHandlers.delete(handler);\n    };\n  }, [isTextInput]);\n\n  return {isFocusVisible: isFocusVisibleState};\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {HoverEvents} from '@react-types/shared';\nimport {HTMLAttributes, useEffect, useMemo, useRef, useState} from 'react';\n\nexport interface HoverProps extends HoverEvents {\n  /** Whether the hover events should be disabled. */\n  isDisabled?: boolean\n}\n\ninterface HoverResult {\n  /** Props to spread on the target element. */\n  hoverProps: HTMLAttributes<HTMLElement>,\n  isHovered: boolean\n}\n\n// iOS fires onPointerEnter twice: once with pointerType=\"touch\" and again with pointerType=\"mouse\".\n// We want to ignore these emulated events so they do not trigger hover behavior.\n// See https://bugs.webkit.org/show_bug.cgi?id=214609.\nlet globalIgnoreEmulatedMouseEvents = false;\nlet hoverCount = 0;\n\nfunction setGlobalIgnoreEmulatedMouseEvents() {\n  globalIgnoreEmulatedMouseEvents = true;\n\n  // Clear globalIgnoreEmulatedMouseEvents after a short timeout. iOS fires onPointerEnter\n  // with pointerType=\"mouse\" immediately after onPointerUp and before onFocus. On other\n  // devices that don't have this quirk, we don't want to ignore a mouse hover sometime in\n  // the distant future because a user previously touched the element.\n  setTimeout(() => {\n    globalIgnoreEmulatedMouseEvents = false;\n  }, 50);\n}\n\nfunction handleGlobalPointerEvent(e) {\n  if (e.pointerType === 'touch') {\n    setGlobalIgnoreEmulatedMouseEvents();\n  }\n}\n\nfunction setupGlobalTouchEvents() {\n  if (typeof document === 'undefined') {\n    return;\n  }\n\n  if (typeof PointerEvent !== 'undefined') {\n    document.addEventListener('pointerup', handleGlobalPointerEvent);\n  } else {\n    document.addEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n  }\n\n  hoverCount++;\n  return () => {\n    hoverCount--;\n    if (hoverCount > 0) {\n      return;\n    }\n\n    if (typeof PointerEvent !== 'undefined') {\n      document.removeEventListener('pointerup', handleGlobalPointerEvent);\n    } else {\n      document.removeEventListener('touchend', setGlobalIgnoreEmulatedMouseEvents);\n    }\n  };\n}\n\n/**\n * Handles pointer hover interactions for an element. Normalizes behavior\n * across browsers and platforms, and ignores emulated mouse events on touch devices.\n */\nexport function useHover(props: HoverProps): HoverResult {\n  let {\n    onHoverStart,\n    onHoverChange,\n    onHoverEnd,\n    isDisabled\n  } = props;\n\n  let [isHovered, setHovered] = useState(false);\n  let state = useRef({\n    isHovered: false,\n    ignoreEmulatedMouseEvents: false\n  }).current;\n\n  useEffect(setupGlobalTouchEvents, []);\n\n  let hoverProps = useMemo(() => {\n    let triggerHoverStart = (event, pointerType) => {\n      if (isDisabled || pointerType === 'touch' || state.isHovered) {\n        return;\n      }\n\n      state.isHovered = true;\n      let target = event.target;\n\n      if (onHoverStart) {\n        onHoverStart({\n          type: 'hoverstart',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(true);\n      }\n\n      setHovered(true);\n    };\n\n    let triggerHoverEnd = (event, pointerType) => {\n      if (isDisabled || pointerType === 'touch' || !state.isHovered) {\n        return;\n      }\n\n      state.isHovered = false;\n      let target = event.target;\n\n      if (onHoverEnd) {\n        onHoverEnd({\n          type: 'hoverend',\n          target,\n          pointerType\n        });\n      }\n\n      if (onHoverChange) {\n        onHoverChange(false);\n      }\n\n      setHovered(false);\n    };\n\n    let hoverProps: HTMLAttributes<HTMLElement> = {};\n\n    if (typeof PointerEvent !== 'undefined') {\n      hoverProps.onPointerEnter = (e) => {\n        if (globalIgnoreEmulatedMouseEvents && e.pointerType === 'mouse') {\n          return;\n        }\n\n        triggerHoverStart(e, e.pointerType);\n      };\n\n      hoverProps.onPointerLeave = (e) => {\n        triggerHoverEnd(e, e.pointerType);\n      };\n    } else {\n      hoverProps.onTouchStart = () => {\n        state.ignoreEmulatedMouseEvents = true;\n      };\n\n      hoverProps.onMouseEnter = (e) => {\n        if (!state.ignoreEmulatedMouseEvents && !globalIgnoreEmulatedMouseEvents) {\n          triggerHoverStart(e, 'mouse');\n        }\n\n        state.ignoreEmulatedMouseEvents = false;\n      };\n\n      hoverProps.onMouseLeave = (e) => {\n        triggerHoverEnd(e, 'mouse');\n      };\n    }\n    return hoverProps;\n  }, [onHoverStart, onHoverChange, onHoverEnd, isDisabled, state]);\n\n  return {\n    hoverProps,\n    isHovered\n  };\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","isVirtualClick","event","mozInputSource","isTrusted","detail","pointerType","PressResponderContext","React","createContext","displayName","usePressResponderContext","props","context","useContext","register","contextProps","mergeProps","useEffect","ref","current","usePress","onPress","onPressChange","onPressStart","onPressEnd","onPressUp","isDisabled","isPressed","isPressedProp","domProps","setPressed","useState","useRef","ignoreEmulatedMouseEvents","ignoreClickAfterPress","activePointerId","target","isOverTarget","globalListeners","Map","addGlobalListener","useCallback","eventTarget","type","listener","options","set","addEventListener","removeGlobalListener","removeEventListener","delete","pressProps","useMemo","state","triggerPressStart","originalEvent","currentTarget","shiftKey","metaKey","ctrlKey","triggerPressEnd","wasPressed","triggerPressUp","onKeyDown","e","isValidKeyboardEvent","nativeEvent","preventDefault","stopPropagation","repeat","document","onKeyUp","createEvent","onClick","button","focusWithoutScrolling","isHTMLAnchorLink","getAttribute","click","disableTextSelection","userSelect","documentElement","style","webkitUserSelect","restoreTextSelection","setTimeout","runAfterTransition","PointerEvent","onPointerDown","pointerId","onPointerMove","onPointerUp","onPointerCancel","onMouseDown","unbindEvents","onMouseUp","onMouseEnter","onMouseLeave","onTouchStart","touch","getTouchFromEvent","identifier","window","onScroll","onTouchMove","getTouchById","onTouchEnd","onTouchCancel","cancelTouchEvent","contains","forEach","value","key","tagName","hasAttribute","element","isContentEditable","role","targetTouches","length","changedTouches","i","point","rect","getBoundingClientRect","clientX","left","right","clientY","top","bottom","useInteractOutside","onInteractOutside","stateRef","isPointerDown","isValidEvent","ownerDocument","body","Pressable","forwardRef","children","child","Children","only","cloneElement","PressResponder","isRegistered","prevContext","console","warn","createEventHandler","handler","shouldStopPropagation","isDefaultPrevented","error","continuePropagation","useKeyboard","keyboardProps","useFocus","focusProps","onFocus","onBlur","onFocusChange","useFocusWithin","isFocusWithin","focusWithinProps","onFocusWithin","onFocusWithinChange","relatedTarget","onBlurWithin","currentModality","changeHandlers","Set","hasSetupGlobalListeners","hasEventBeforeFocus","isMac","navigator","test","platform","FOCUS_VISIBLE_INPUT_KEYS","Tab","Escape","triggerChangeHandlers","modality","isValidKey","altKey","handleKeyboardEvent","handlePointerEvent","handleClickEvent","handleFocusEvent","handleWindowBlur","setupGlobalFocusEvents","focus","HTMLElement","prototype","apply","arguments","isFocusVisible","getInteractionModality","setInteractionModality","useInteractionModality","setModality","add","useFocusVisible","isTextInput","autoFocus","isFocusVisibleState","setFocusVisible","KeyboardEvent","globalIgnoreEmulatedMouseEvents","hoverCount","setGlobalIgnoreEmulatedMouseEvents","handleGlobalPointerEvent","setupGlobalTouchEvents","useHover","onHoverStart","onHoverChange","onHoverEnd","isHovered","setHovered","hoverProps","triggerHoverStart","triggerHoverEnd","onPointerEnter","onPointerLeave"],"version":3,"file":"main.js.map"}