{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./packages/@react-aria/overlays/src/calculatePosition.ts","./packages/@react-aria/overlays/src/useCloseOnScroll.ts","./packages/@react-aria/overlays/src/useOverlayPosition.ts","./packages/@react-aria/overlays/src/useOverlay.ts","./packages/@react-aria/overlays/src/useOverlayTrigger.ts","./packages/@react-aria/overlays/src/usePreventScroll.ts","./packages/@react-aria/overlays/src/useModal.tsx","./packages/@react-aria/overlays/intl/ar-AE.json","./packages/@react-aria/overlays/intl/bg-BG.json","./packages/@react-aria/overlays/intl/cs-CZ.json","./packages/@react-aria/overlays/intl/da-DK.json","./packages/@react-aria/overlays/intl/de-DE.json","./packages/@react-aria/overlays/intl/el-GR.json","./packages/@react-aria/overlays/intl/en-US.json","./packages/@react-aria/overlays/intl/es-ES.json","./packages/@react-aria/overlays/intl/et-EE.json","./packages/@react-aria/overlays/intl/fi-FI.json","./packages/@react-aria/overlays/intl/fr-FR.json","./packages/@react-aria/overlays/intl/he-IL.json","./packages/@react-aria/overlays/intl/hr-HR.json","./packages/@react-aria/overlays/intl/hu-HU.json","./packages/@react-aria/overlays/intl/it-IT.json","./packages/@react-aria/overlays/intl/ja-JP.json","./packages/@react-aria/overlays/intl/ko-KR.json","./packages/@react-aria/overlays/intl/lt-LT.json","./packages/@react-aria/overlays/intl/lv-LV.json","./packages/@react-aria/overlays/intl/nb-NO.json","./packages/@react-aria/overlays/intl/nl-NL.json","./packages/@react-aria/overlays/intl/pl-PL.json","./packages/@react-aria/overlays/intl/pt-BR.json","./packages/@react-aria/overlays/intl/ro-RO.json","./packages/@react-aria/overlays/intl/ru-RU.json","./packages/@react-aria/overlays/intl/sk-SK.json","./packages/@react-aria/overlays/intl/sl-SI.json","./packages/@react-aria/overlays/intl/sr-SP.json","./packages/@react-aria/overlays/intl/sv-SE.json","./packages/@react-aria/overlays/intl/tr-TR.json","./packages/@react-aria/overlays/intl/uk-UA.json","./packages/@react-aria/overlays/intl/zh-CN.json","./packages/@react-aria/overlays/intl/zh-TW.json","./packages/@react-aria/overlays/src/DismissButton.tsx"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Axis, Placement, PlacementAxis, SizeAxis} from '@react-types/overlays';\nimport getCss from 'dom-helpers/style';\nimport getOffset from 'dom-helpers/query/offset';\nimport getPosition from 'dom-helpers/query/position';\nimport getScrollLeft from 'dom-helpers/query/scrollLeft';\nimport getScrollTop from 'dom-helpers/query/scrollTop';\nimport ownerDocument from 'dom-helpers/ownerDocument';\n\ninterface Position {\n  top?: number,\n  left?: number,\n  bottom?: number,\n  right?: number\n}\n\ninterface Dimensions {\n  width: number,\n  height: number,\n  top: number,\n  left: number,\n  scroll: Position\n}\n\ninterface ParsedPlacement {\n  placement: PlacementAxis,\n  crossPlacement: PlacementAxis,\n  axis: Axis,\n  crossAxis: Axis,\n  size: SizeAxis,\n  crossSize: SizeAxis\n}\n\ninterface Offset {\n  top: number,\n  left: number,\n  width: number,\n  height: number\n}\n\ninterface PositionOpts {\n  placement: Placement,\n  targetNode: HTMLElement,\n  overlayNode: HTMLElement,\n  scrollNode: HTMLElement,\n  padding: number,\n  shouldFlip: boolean,\n  boundaryElement: HTMLElement,\n  offset: number,\n  crossOffset: number\n}\n\nexport interface PositionResult {\n  position?: Position,\n  arrowOffsetLeft?: number,\n  arrowOffsetTop?: number,\n  maxHeight?: number,\n  placement: PlacementAxis\n}\n\nconst AXIS = {\n  top: 'top',\n  bottom: 'top',\n  left: 'left',\n  right: 'left'\n};\n\nconst FLIPPED_DIRECTION = {\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left'\n};\n\nconst CROSS_AXIS = {\n  top: 'left',\n  left: 'top'\n};\n\nconst AXIS_SIZE = {\n  top: 'height',\n  left: 'width'\n};\n\nconst PARSED_PLACEMENT_CACHE = {};\n\nfunction getContainerDimensions(containerNode: Element): Dimensions {\n  let width = 0, height = 0, top = 0, left = 0;\n  let scroll: Position = {};\n\n  if (containerNode.tagName === 'BODY') {\n    width = document.documentElement.clientWidth;\n    height = document.documentElement.clientHeight;\n\n    scroll.top =\n      getScrollTop(ownerDocument(containerNode).documentElement) ||\n      getScrollTop(containerNode);\n    scroll.left =\n      getScrollLeft(ownerDocument(containerNode).documentElement) ||\n      getScrollLeft(containerNode);\n  } else {\n    ({width, height, top, left} = getOffset(containerNode));\n    scroll.top = getScrollTop(containerNode);\n    scroll.left = getScrollLeft(containerNode);\n  }\n\n  return {width, height, scroll, top, left};\n}\n\nfunction getScroll(node: HTMLElement): Offset {\n  return {\n    top: node.scrollTop,\n    left: node.scrollLeft,\n    width: node.scrollWidth,\n    height: node.scrollHeight\n  };\n}\n\nfunction getDelta(\n  axis: Axis,\n  offset: number,\n  size: number,\n  containerDimensions: Dimensions,\n  padding: number\n) {\n  let containerScroll = containerDimensions.scroll[axis];\n  let containerHeight = containerDimensions[AXIS_SIZE[axis]];\n\n  let startEdgeOffset = offset - padding - containerScroll;\n  let endEdgeOffset = offset + padding - containerScroll + size;\n\n  if (startEdgeOffset < 0) {\n    return -startEdgeOffset;\n  } else if (endEdgeOffset > containerHeight) {\n    return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);\n  } else {\n    return 0;\n  }\n}\n\nfunction getMargins(node: HTMLElement): Position {\n  let style = window.getComputedStyle(node);\n  return {\n    top: parseInt(style.marginTop, 10) || 0,\n    bottom: parseInt(style.marginBottom, 10) || 0,\n    left: parseInt(style.marginLeft, 10) || 0,\n    right: parseInt(style.marginRight, 10) || 0\n  };\n}\n\nfunction parsePlacement(input: Placement): ParsedPlacement {\n  if (PARSED_PLACEMENT_CACHE[input]) {\n    return PARSED_PLACEMENT_CACHE[input];\n  }\n\n  let [placement, crossPlacement] = input.split(' ');\n  let axis: Axis = AXIS[placement] || 'right';\n  let crossAxis: Axis = CROSS_AXIS[axis];\n\n  if (!AXIS[crossPlacement]) {\n    crossPlacement = 'center';\n  }\n\n  let size = AXIS_SIZE[axis];\n  let crossSize = AXIS_SIZE[crossAxis];\n  PARSED_PLACEMENT_CACHE[input] = {placement, crossPlacement, axis, crossAxis, size, crossSize};\n  return PARSED_PLACEMENT_CACHE[input];\n}\n\nfunction computePosition(\n  childOffset: Offset,\n  boundaryDimensions: Dimensions,\n  overlaySize: Offset,\n  placementInfo: ParsedPlacement,\n  offset: number,\n  crossOffset: number\n) {\n  let {placement, crossPlacement, axis, crossAxis, size, crossSize} = placementInfo;\n  let position: Position = {};\n\n  position[crossAxis] = childOffset[crossAxis] + crossOffset;\n  if (crossPlacement === 'center') {\n    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;\n  } else if (crossPlacement !== crossAxis) {\n    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]);\n  }\n\n  // Ensure overlay sticks to target(ignore for overlays smaller than target)\n  if (childOffset[crossSize] < overlaySize[crossSize]) {\n    let positionForPositiveSideOverflow = Math.min(position[crossAxis], childOffset[crossAxis]);\n    position[crossAxis] = Math.max(positionForPositiveSideOverflow, childOffset[crossAxis] - overlaySize[crossSize] + childOffset[crossSize]);\n  }\n\n  // Floor these so the position isn't placed on a partial pixel, only whole pixels. Shouldn't matter if it was floored or ceiled, so chose one.\n  if (placement === axis) {\n    position[FLIPPED_DIRECTION[axis]] = Math.floor(boundaryDimensions[size] - childOffset[axis] + offset);\n  } else {\n    position[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);\n  }\n\n  return position;\n}\n\nfunction getMaxHeight(\n  position: Position,\n  boundaryDimensions: Dimensions,\n  containerOffsetWithBoundary: Offset,\n  childOffset: Offset,\n  margins: Position,\n  padding: number\n) {\n  return position.top != null\n    ? Math.max(0, boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top + containerOffsetWithBoundary.top - position.top - margins.top - margins.bottom - padding)\n    : Math.max(0, childOffset.top - boundaryDimensions.top - boundaryDimensions.scroll.top - containerOffsetWithBoundary.top - margins.top - margins.bottom - padding);\n}\n\nfunction getAvailableSpace(\n  boundaryDimensions: Dimensions,\n  containerOffsetWithBoundary: Offset,\n  childOffset: Offset,\n  margins: Position,\n  padding: number,\n  placementInfo: ParsedPlacement\n) {\n  let {placement, axis, size} = placementInfo;\n  if (placement === axis) {\n    return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[FLIPPED_DIRECTION[axis]] - padding);\n  }\n\n  return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - margins[axis] - margins[FLIPPED_DIRECTION[axis]] - padding);\n}\n\nexport function calculatePositionInternal(\n  placementInput: Placement,\n  childOffset: Offset,\n  overlaySize: Offset,\n  scrollSize: Offset,\n  margins: Position,\n  padding: number,\n  flip: boolean,\n  boundaryDimensions: Dimensions,\n  containerOffsetWithBoundary: Offset,\n  offset: number,\n  crossOffset: number\n): PositionResult {\n  let placementInfo = parsePlacement(placementInput);\n  let {size, crossAxis, crossSize, placement, crossPlacement} = placementInfo;\n  let position = computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset);\n  let normalizedOffset = offset;\n  let space = getAvailableSpace(\n    boundaryDimensions,\n    containerOffsetWithBoundary,\n    childOffset,\n    margins,\n    padding + offset,\n    placementInfo\n  );\n\n  // Check if the scroll size of the overlay is greater than the available space to determine if we need to flip\n  if (flip && scrollSize[size] > space) {\n    let flippedPlacementInfo = parsePlacement(`${FLIPPED_DIRECTION[placement]} ${crossPlacement}` as Placement);\n    let flippedPosition = computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset);\n    let flippedSpace = getAvailableSpace(\n      boundaryDimensions,\n      containerOffsetWithBoundary,\n      childOffset,\n      margins,\n      padding + offset,\n      flippedPlacementInfo\n    );\n\n    // If the available space for the flipped position is greater than the original available space, flip.\n    if (flippedSpace > space) {\n      placementInfo = flippedPlacementInfo;\n      position = flippedPosition;\n      normalizedOffset = offset;\n    }\n  }\n\n  let delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n  position[crossAxis] += delta;\n\n  let maxHeight = getMaxHeight(\n    position,\n    boundaryDimensions,\n    containerOffsetWithBoundary,\n    childOffset,\n    margins,\n    padding\n  );\n\n  overlaySize.height = Math.min(overlaySize.height, maxHeight);\n\n  position = computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset);\n  delta = getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);\n  position[crossAxis] += delta;\n\n  let arrowPosition: Position = {};\n  arrowPosition[crossAxis] = childOffset[crossSize] > overlaySize[crossSize] ? null : (childOffset[crossAxis] - position[crossAxis] + childOffset[crossSize] / 2);\n\n  return {\n    position,\n    maxHeight: maxHeight,\n    arrowOffsetLeft: arrowPosition.left,\n    arrowOffsetTop: arrowPosition.top,\n    placement: placementInfo.placement\n  };\n}\n\n/**\n * Determines where to place the overlay with regards to the target and the position of an optional indicator.\n */\nexport function calculatePosition(opts: PositionOpts): PositionResult {\n  let {\n    placement,\n    targetNode,\n    overlayNode,\n    scrollNode,\n    padding,\n    shouldFlip,\n    boundaryElement,\n    offset,\n    crossOffset\n  } = opts;\n\n  let container = overlayNode.offsetParent || document.body;\n  let isBodyContainer = container.tagName === 'BODY';\n  let childOffset: Offset = isBodyContainer ? getOffset(targetNode) : getPosition(targetNode, container);\n\n  if (!isBodyContainer) {\n    childOffset.top += parseInt(getCss(targetNode, 'marginTop'), 10) || 0;\n    childOffset.left += parseInt(getCss(targetNode, 'marginLeft'), 10) || 0;\n  }\n\n  let overlaySize: Offset = getOffset(overlayNode);\n  let margins = getMargins(overlayNode);\n  overlaySize.width += margins.left + margins.right;\n  overlaySize.height += margins.top + margins.bottom;\n\n  let scrollSize = getScroll(scrollNode);\n  let boundaryDimensions = getContainerDimensions(boundaryElement);\n  let containerOffsetWithBoundary: Offset = boundaryElement.tagName === 'BODY' ? getOffset(container) : getPosition(container, boundaryElement);\n\n  return calculatePositionInternal(\n    placement,\n    childOffset,\n    overlaySize,\n    scrollSize,\n    margins,\n    padding,\n    shouldFlip,\n    boundaryDimensions,\n    containerOffsetWithBoundary,\n    offset,\n    crossOffset\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useEffect} from 'react';\n\n// This behavior moved from useOverlayTrigger to useOverlayPosition.\n// For backward compatibility, where useOverlayTrigger handled hiding the popover on close,\n// it sets a close function here mapped from the trigger element. This way we can avoid\n// forcing users to pass an onClose function to useOverlayPosition which could be considered\n// a breaking change.\nexport const onCloseMap: WeakMap<HTMLElement, () => void> = new WeakMap();\n\ninterface CloseOnScrollOptions {\n  triggerRef: RefObject<HTMLElement>,\n  isOpen?: boolean,\n  onClose?: () => void\n}\n\n/** @private */\nexport function useCloseOnScroll(opts: CloseOnScrollOptions) {\n  let {triggerRef, isOpen, onClose} = opts;\n\n  useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n\n    let onScroll = (e: MouseEvent) => {\n      // Ignore if scrolling an scrollable region outside the trigger's tree.\n      let target = e.target as HTMLElement;\n      if (!triggerRef.current || !target.contains(triggerRef.current)) {\n        return;\n      }\n\n      let onCloseHandler = onClose || onCloseMap.get(triggerRef.current);\n      if (onCloseHandler) {\n        onCloseHandler();\n      }\n    };\n\n    window.addEventListener('scroll', onScroll, true);\n    return () => {\n      window.removeEventListener('scroll', onScroll, true);\n    };\n  }, [isOpen, onClose, triggerRef]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {calculatePosition, PositionResult} from './calculatePosition';\nimport {HTMLAttributes, RefObject, useCallback, useEffect, useState} from 'react';\nimport {Placement, PlacementAxis, PositionProps} from '@react-types/overlays';\nimport {useCloseOnScroll} from './useCloseOnScroll';\nimport {useLocale} from '@react-aria/i18n';\n\ninterface AriaPositionProps extends PositionProps {\n  /**\n   * Element that that serves as the positioning boundary.\n   * @default document.body\n   */\n  boundaryElement?: HTMLElement,\n  /**\n   * The ref for the element which the overlay positions itself with respect to.\n   */\n  targetRef: RefObject<HTMLElement>,\n  /**\n   * The ref for the overlay element.\n   */\n  overlayRef: RefObject<HTMLElement>,\n  /**\n   * A ref for the scrollable region within the overlay.\n   * @default overlayRef\n   */\n  scrollRef?: RefObject<HTMLElement>,\n  /**\n   * Whether the overlay should update its position automatically.\n   * @default true\n   */\n  shouldUpdatePosition?: boolean,\n  /** Handler that is called when the overlay should close. */\n  onClose?: () => void\n}\n\ninterface PositionAria {\n  /** Props for the overlay container element. */\n  overlayProps: HTMLAttributes<Element>,\n  /** Props for the overlay tip arrow if any. */\n  arrowProps: HTMLAttributes<Element>,\n  /** Placement of the overlay with respect to the overlay trigger. */\n  placement: PlacementAxis,\n  /** Updates the position of the overlay. */\n  updatePosition(): void\n}\n\n/**\n * Handles positioning overlays like popovers and menus relative to a trigger\n * element, and updating the position when the window resizes.\n */\nexport function useOverlayPosition(props: AriaPositionProps): PositionAria {\n  let {direction} = useLocale();\n  let {\n    targetRef,\n    overlayRef,\n    scrollRef = overlayRef,\n    placement = 'bottom' as Placement,\n    containerPadding = 12,\n    shouldFlip = true,\n    boundaryElement = typeof document !== 'undefined' ? document.body : null,\n    offset = 0,\n    crossOffset = 0,\n    shouldUpdatePosition = true,\n    isOpen = true,\n    onClose\n  } = props;\n  let [position, setPosition] = useState<PositionResult>({\n    position: {},\n    arrowOffsetLeft: undefined,\n    arrowOffsetTop: undefined,\n    maxHeight: undefined,\n    placement: undefined\n  });\n\n  let deps = [\n    shouldUpdatePosition,\n    placement,\n    overlayRef.current,\n    targetRef.current,\n    scrollRef.current,\n    containerPadding,\n    shouldFlip,\n    boundaryElement,\n    offset,\n    crossOffset,\n    isOpen,\n    direction\n  ];\n\n  let updatePosition = useCallback(() => {\n    if (shouldUpdatePosition === false || !isOpen || !overlayRef.current || !targetRef.current || !scrollRef.current || !boundaryElement) {\n      return;\n    }\n\n    setPosition(\n      calculatePosition({\n        placement: translateRTL(placement, direction),\n        overlayNode: overlayRef.current,\n        targetNode: targetRef.current,\n        scrollNode: scrollRef.current,\n        padding: containerPadding,\n        shouldFlip,\n        boundaryElement,\n        offset,\n        crossOffset\n      })\n    );\n  }, deps);\n\n  // Update position when anything changes\n  useEffect(updatePosition, deps);\n\n  // Update position on window resize\n  useResize(updatePosition);\n\n  // When scrolling a parent scrollable region of the trigger (other than the body),\n  // we hide the popover. Otherwise, its position would be incorrect.\n  useCloseOnScroll({\n    triggerRef: targetRef,\n    isOpen,\n    onClose\n  });\n\n  return {\n    overlayProps: {\n      style: {\n        position: 'absolute',\n        zIndex: 100000, // should match the z-index in ModalTrigger\n        ...position.position,\n        maxHeight: position.maxHeight\n      }\n    },\n    placement: position.placement,\n    arrowProps: {\n      style: {\n        left: position.arrowOffsetLeft,\n        top: position.arrowOffsetTop\n      }\n    },\n    updatePosition\n  };\n}\n\nfunction useResize(onResize) {\n  useEffect(() => {\n    window.addEventListener('resize', onResize, false);\n    return () => {\n      window.removeEventListener('resize', onResize, false);\n    };\n  }, [onResize]);\n}\n\nfunction translateRTL(position, direction) {\n  if (direction === 'rtl') {\n    return position.replace('start', 'right').replace('end', 'left');\n  }\n  return position.replace('start', 'left').replace('end', 'right');\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HTMLAttributes, RefObject, SyntheticEvent, useEffect} from 'react';\nimport {useFocusWithin, useInteractOutside} from '@react-aria/interactions';\n\ninterface OverlayProps {\n  /** Whether the overlay is currently open. */\n  isOpen?: boolean,\n\n  /** Handler that is called when the overlay should close. */\n  onClose?: () => void,\n\n  /**\n   * Whether to close the overlay when the user interacts outside it.\n   * @default false\n   */\n  isDismissable?: boolean,\n\n  /** Whether the overlay should close when focus is lost or moves outside it. */\n  shouldCloseOnBlur?: boolean,\n\n  /** \n   * Whether pressing the escape key to close the overlay should be disabled. \n   * @default false\n   */\n  isKeyboardDismissDisabled?: boolean,\n\n  /**\n   * When user interacts with the argument element outside of the overlay ref,\n   * return true if onClose should be called.  This gives you a chance to filter\n   * out interaction with elements that should not dismiss the overlay.  \n   * By default, onClose will always be called on interaction outside the overlay ref.\n   */\n  shouldCloseOnInteractOutside?: (element: HTMLElement) => boolean\n}\n\ninterface OverlayAria {\n  /** Props to apply to the overlay container element. */\n  overlayProps: HTMLAttributes<HTMLElement>\n}\n\nconst visibleOverlays: RefObject<HTMLElement>[] = [];\n\n/**\n * Provides the behavior for overlays such as dialogs, popovers, and menus.\n * Hides the overlay when the user interacts outside it, when the Escape key is pressed,\n * or optionally, on blur. Only the top-most overlay will close at once.\n */\nexport function useOverlay(props: OverlayProps, ref: RefObject<HTMLElement>): OverlayAria {\n  let {onClose, shouldCloseOnBlur, isOpen, isDismissable = false, isKeyboardDismissDisabled = false, shouldCloseOnInteractOutside} = props;\n\n  // Add the overlay ref to the stack of visible overlays on mount, and remove on unmount.\n  useEffect(() => {\n    if (isOpen) {\n      visibleOverlays.push(ref);\n    }\n\n    return () => {\n      let index = visibleOverlays.indexOf(ref);\n      if (index >= 0) {\n        visibleOverlays.splice(index, 1);\n      }\n    };\n  }, [isOpen, ref]);\n\n  // Only hide the overlay when it is the topmost visible overlay in the stack.\n  let onHide = () => {\n    if (visibleOverlays[visibleOverlays.length - 1] === ref && onClose) {\n      onClose();\n    }\n  };\n\n  let onInteractOutside = (e: SyntheticEvent<HTMLElement>) => {\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target as HTMLElement)) {\n      onHide();\n    }\n  };\n\n  // Handle the escape key\n  let onKeyDown = (e) => {\n    if (e.key === 'Escape' && !isKeyboardDismissDisabled) {\n      e.preventDefault();\n      onHide();\n    }\n  };\n\n  // Handle clicking outside the overlay to close it\n  useInteractOutside({ref, onInteractOutside: isDismissable ? onInteractOutside : null});\n\n  let {focusWithinProps} = useFocusWithin({\n    isDisabled: !shouldCloseOnBlur,\n    onBlurWithin: (e) => {\n      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.relatedTarget as HTMLElement)) {\n        onClose();\n      }\n    }\n  });\n\n  return {\n    overlayProps: {\n      onKeyDown,\n      ...focusWithinProps\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {HTMLAttributes, RefObject, useEffect} from 'react';\nimport {onCloseMap} from './useCloseOnScroll';\nimport {OverlayTriggerState} from '@react-stately/overlays';\nimport {useId} from '@react-aria/utils';\n\ninterface OverlayTriggerProps {\n  /** Type of overlay that is opened by the trigger. */\n  type: 'dialog' | 'menu' | 'listbox' | 'tree' | 'grid'\n}\n\ninterface OverlayTriggerAria {\n  /** Props for the trigger element. */\n  triggerProps: AriaButtonProps,\n\n  /** Props for the overlay container element. */\n  overlayProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Handles the behavior and accessibility for an overlay trigger, e.g. a button\n * that opens a popover, menu, or other overlay that is positioned relative to the trigger.\n */\nexport function useOverlayTrigger(props: OverlayTriggerProps, state: OverlayTriggerState, ref: RefObject<HTMLElement>): OverlayTriggerAria {\n  let {type} = props;\n  let {isOpen} = state;\n\n  // Backward compatibility. Share state close function with useOverlayPosition so it can close on scroll\n  // without forcing users to pass onClose.\n  useEffect(() => {\n    if (ref.current) {\n      onCloseMap.set(ref.current, state.close);\n    }\n  });\n\n  // Aria 1.1 supports multiple values for aria-haspopup other than just menus.\n  // https://www.w3.org/TR/wai-aria-1.1/#aria-haspopup\n  // However, we only add it for menus for now because screen readers often\n  // announce it as a menu even for other values.\n  let ariaHasPopup = undefined;\n  if (type === 'menu') {\n    ariaHasPopup = true;\n  } else if (type === 'listbox') {\n    ariaHasPopup = 'listbox';\n  }\n\n  let overlayId = useId();\n  return {\n    triggerProps: {\n      'aria-haspopup': ariaHasPopup,\n      'aria-expanded': isOpen,\n      'aria-controls': isOpen ? overlayId : null\n    },\n    overlayProps: {\n      id: overlayId\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useEffect} from 'react';\n\n/**\n * Prevents scrolling on the document body on mount, and \n * restores it on unmount. Also ensures that content does not\n * shift due to the scrollbars disappearing.\n */\nexport function usePreventScroll(): void {\n  useEffect(() => {\n    let overflow = document.body.style.overflow;\n    let paddingRight = document.body.style.paddingRight;\n    document.body.style.paddingRight = window.innerWidth - document.documentElement.clientWidth + 'px';\n    document.body.style.overflow = 'hidden';\n    return () => {\n      document.body.style.overflow = overflow;\n      document.body.style.paddingRight = paddingRight;\n    };\n  }, []);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React, {AriaAttributes, HTMLAttributes, ReactNode, useContext, useEffect, useState} from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface ModalProviderProps extends HTMLAttributes<HTMLElement> {\n  children: ReactNode\n}\n\ninterface ModalContext {\n  parent: ModalContext | null,\n  modalCount: number,\n  addModal: () => void,\n  removeModal: () => void\n}\n\nconst Context = React.createContext<ModalContext | null>(null);\n\n/**\n * Each ModalProvider tracks how many modals are open in its subtree. On mount, the modals\n * trigger `addModal` to increment the count, and trigger `removeModal` on unmount to decrement it.\n * This is done recursively so that all parent providers are incremented and decremented.\n * If the modal count is greater than zero, we add `aria-hidden` to this provider to hide its\n * subtree from screen readers. This is done using React context in order to account for things\n * like portals, which can cause the React tree and the DOM tree to differ significantly in structure.\n */\nexport function ModalProvider(props: ModalProviderProps) {\n  let {children} = props;\n  let parent = useContext(Context);\n  let [modalCount, setModalCount] = useState(parent ? parent.modalCount : 0);\n  let context = {\n    parent,\n    modalCount,\n    addModal() {\n      setModalCount(count => count + 1);\n      if (parent) {\n        parent.addModal();\n      }\n    },\n    removeModal() {\n      setModalCount(count => count - 1);\n      if (parent) {\n        parent.removeModal();\n      }\n    }\n  };\n\n  return (\n    <Context.Provider value={context}>\n      {children}\n    </Context.Provider>\n  );\n}\n\ninterface ModalProviderAria {\n  /**\n   * Props to be spread on the container element.\n   */\n  modalProviderProps: AriaAttributes\n}\n\n/**\n * Used to determine if the tree should be aria-hidden based on how many\n * modals are open.\n */\nexport function useModalProvider(): ModalProviderAria {\n  let context = useContext(Context);\n  return {\n    modalProviderProps: {\n      'aria-hidden': context && context.modalCount > 0 ? true : null\n    }\n  };\n}\n\n/**\n * Creates a root node that will be aria-hidden if there are other modals open.\n */\nfunction OverlayContainerDOM(props: ModalProviderProps) {\n  let {modalProviderProps} = useModalProvider();\n  return <div {...props} {...modalProviderProps} />;\n}\n\n/**\n * An OverlayProvider acts as a container for the top-level application.\n * Any application that uses modal dialogs or other overlays should\n * be wrapped in a `<OverlayProvider>`. This is used to ensure that\n * the main content of the application is hidden from screen readers\n * if a modal or other overlay is opened. Only the top-most modal or\n * overlay should be accessible at once.\n */\nexport function OverlayProvider(props: ModalProviderProps) {\n  return (\n    <ModalProvider>\n      <OverlayContainerDOM {...props} />\n    </ModalProvider>\n  );\n}\n\n/**\n * A container for overlays like modals and popovers. Renders the overlay\n * into a Portal which is placed at the end of the document body.\n * Also ensures that the overlay is hidden from screen readers if a\n * nested modal is opened. Only the top-most modal or overlay should\n * be accessible at once.\n */\nexport function OverlayContainer(props: ModalProviderProps): React.ReactPortal {\n  let contents = <OverlayProvider {...props} />;\n  return ReactDOM.createPortal(contents, document.body);\n}\n\ninterface ModalAriaProps extends HTMLAttributes<HTMLElement> {\n  /** Data attribute marks the dom node as a modal for the aria-modal-polyfill. */\n  'data-ismodal': boolean\n}\n\ninterface ModalAria {\n  /** Props for the modal content element. */\n  modalProps: ModalAriaProps\n}\n\n/**\n * Hides content outside the current `<OverlayContainer>` from screen readers\n * on mount and restores it on unmount. Typically used by modal dialogs and\n * other types of overlays to ensure that only the top-most modal is\n * accessible at once.\n */\nexport function useModal(): ModalAria {\n  // Add aria-hidden to all parent providers on mount, and restore on unmount.\n  let context = useContext(Context);\n  if (!context) {\n    throw new Error('Modal is not contained within a provider');\n  }\n\n  useEffect(() => {\n    if (!context || !context.parent) {\n      return;\n    }\n\n    // The immediate context is from the provider containing this modal, so we only\n    // want to trigger aria-hidden on its parents not on the modal provider itself.\n    context.parent.addModal();\n    return () => {\n      if (context && context.parent) {\n        context.parent.removeModal();\n      }\n    };\n  }, [context, context.parent]);\n\n  return {\n    modalProps: {\n      'data-ismodal': true\n    }\n  };\n}\n","{\n  \"dismiss\": \"تجاهل\"\n}","{\n  \"dismiss\": \"Отхвърляне\"\n}","{\n  \"dismiss\": \"Odstranit\"\n}","{\n  \"dismiss\": \"Luk\"\n}","{\n  \"dismiss\": \"Schließen\"\n}","{\n  \"dismiss\": \"Απόρριψη\"\n}","{\n  \"dismiss\": \"Dismiss\"\n}\n","{\n  \"dismiss\": \"Descartar\"\n}","{\n  \"dismiss\": \"Lõpeta\"\n}","{\n  \"dismiss\": \"Hylkää\"\n}","{\n  \"dismiss\": \"Rejeter\"\n}","{\n  \"dismiss\": \"התעלם\"\n}","{\n  \"dismiss\": \"Odbaci\"\n}","{\n  \"dismiss\": \"Elutasítás\"\n}","{\n  \"dismiss\": \"Ignora\"\n}","{\n  \"dismiss\": \"閉じる\"\n}","{\n  \"dismiss\": \"무시\"\n}","{\n  \"dismiss\": \"Atmesti\"\n}","{\n  \"dismiss\": \"Nerādīt\"\n}","{\n  \"dismiss\": \"Lukk\"\n}","{\n  \"dismiss\": \"Negeren\"\n}","{\n  \"dismiss\": \"Zignoruj\"\n}","{\n  \"dismiss\": \"Descartar\"\n}","{\n  \"dismiss\": \"Revocare\"\n}","{\n  \"dismiss\": \"Пропустить\"\n}","{\n  \"dismiss\": \"Zrušiť\"\n}","{\n  \"dismiss\": \"Opusti\"\n}","{\n  \"dismiss\": \"Odbaci\"\n}","{\n  \"dismiss\": \"Avvisa\"\n}","{\n  \"dismiss\": \"Kapat\"\n}","{\n  \"dismiss\": \"Скасувати\"\n}","{\n  \"dismiss\": \"取消\"\n}","{\n  \"dismiss\": \"關閉\"\n}","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport React from 'react';\nimport {useMessageFormatter} from '@react-aria/i18n';\nimport {VisuallyHidden} from '@react-aria/visually-hidden';\n\ninterface DismissButtonProps {\n  /** Called when the dismiss button is activated. */\n  onDismiss?: () => void\n}\n\n/**\n * A visually hidden button that can be used to allow screen reader\n * users to dismiss a modal or popup when there is no visual\n * affordance to do so.\n */\nexport function DismissButton(props: DismissButtonProps) {\n  let {onDismiss} = props;\n  let formatMessage = useMessageFormatter(intlMessages);\n  let onClick = () => {\n    if (onDismiss) {\n      onDismiss();\n    }\n  };\n\n  return (\n    <VisuallyHidden>\n      <button\n        tabIndex={-1}\n        aria-label={formatMessage('dismiss')}\n        onClick={onClick} />\n    </VisuallyHidden>\n  );\n}\n"],"names":["$parcel$interopDefault","a","__esModule","default","AXIS","top","bottom","left","right","FLIPPED_DIRECTION","CROSS_AXIS","AXIS_SIZE","PARSED_PLACEMENT_CACHE","getContainerDimensions","containerNode","width","height","scroll","tagName","document","documentElement","clientWidth","clientHeight","getScrollTop","ownerDocument","getScrollLeft","getOffset","getScroll","node","scrollTop","scrollLeft","scrollWidth","scrollHeight","getDelta","axis","offset","size","containerDimensions","padding","containerScroll","containerHeight","startEdgeOffset","endEdgeOffset","Math","max","getMargins","style","window","getComputedStyle","parseInt","marginTop","marginBottom","marginLeft","marginRight","parsePlacement","input","placement","crossPlacement","split","crossAxis","crossSize","computePosition","childOffset","boundaryDimensions","overlaySize","placementInfo","crossOffset","position","positionForPositiveSideOverflow","min","floor","getMaxHeight","containerOffsetWithBoundary","margins","getAvailableSpace","calculatePositionInternal","placementInput","scrollSize","flip","normalizedOffset","space","flippedPlacementInfo","flippedPosition","flippedSpace","delta","maxHeight","arrowPosition","arrowOffsetLeft","arrowOffsetTop","calculatePosition","opts","targetNode","overlayNode","scrollNode","shouldFlip","boundaryElement","container","offsetParent","body","isBodyContainer","getPosition","getCss","onCloseMap","WeakMap","useCloseOnScroll","triggerRef","isOpen","onClose","useEffect","onScroll","e","target","current","contains","onCloseHandler","get","addEventListener","removeEventListener","useOverlayPosition","props","direction","useLocale","targetRef","overlayRef","scrollRef","containerPadding","shouldUpdatePosition","setPosition","useState","undefined","deps","updatePosition","useCallback","translateRTL","useResize","overlayProps","zIndex","arrowProps","onResize","replace","visibleOverlays","useOverlay","ref","shouldCloseOnBlur","isDismissable","isKeyboardDismissDisabled","shouldCloseOnInteractOutside","push","index","indexOf","splice","onHide","length","onInteractOutside","onKeyDown","key","preventDefault","useInteractOutside","focusWithinProps","useFocusWithin","isDisabled","onBlurWithin","relatedTarget","useOverlayTrigger","state","type","set","close","ariaHasPopup","overlayId","useId","triggerProps","id","usePreventScroll","overflow","paddingRight","innerWidth","Context","React","createContext","ModalProvider","children","parent","useContext","modalCount","setModalCount","context","addModal","count","removeModal","useModalProvider","modalProviderProps","OverlayContainerDOM","OverlayProvider","OverlayContainer","contents","ReactDOM","createPortal","useModal","Error","modalProps","JSON","parse","DismissButton","onDismiss","formatMessage","useMessageFormatter","intlMessages","onClick"],"version":3,"file":"main.js.map"}